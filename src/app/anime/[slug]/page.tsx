"use client";
import { API_BASE_URL } from "@/config";
import React from "react";
import Navbar from "@/components/nav/navbar";
import TopAnimeCard from "@/components/main-page/TopAnimeList/top-anime-card";
import SectionHeader from "@/components/shared/section-header";
import ActionButton from "@/components/ui/action-button";
import StandartButtonIcon from "@/components/ui/standart-button-icon";
import AnimeDetailsPanel from "@/components/shared/anime-details-panel";
import Rating from "@/components/ui/rating";
import { Star } from "lucide-react";
import ArrowDown from "@/assets/arrow-down.svg";
import WatchTogether from "@/assets/watch-together.svg";
import ImdbRating from "@/assets/anime/imdb-rating.svg";
import { useParams } from "next/navigation";
import CommentCard from "@/components/main-page/CommentSection/comment-card";
import ReviewCard from "@/components/main-page/ReviewSection/review-card";
import AnimeCommentCard from "@/components/main-page/CommentSection/anime-comment-card";
import AnimeCommentSection from "@/components/main-page/CommentSection/anime-comment-section";
import AnimePosterSection from "@/components/anime-page/AnimePosterSection";
import AnimeMainInfoSection from "@/components/anime-page/AnimeMainInfoSection";
import AnimeEpisodesSection from "@/components/anime-page/AnimeEpisodesSection";
import AnimeReviewsSection from "@/components/anime-page/AnimeReviewsSection";

interface Studio {
  id: string;
  name: string;
  slug: string;
  description?: string;
}

interface Seo {
  title: string;
  description: string;
  image: string;
}

interface AnimeDetails {
  id: string;
  slug: string;
  name: string;
  description?: string;
  image_name?: string;
  poster?: string;
  duration?: number;
  episodes_count?: number;
  first_air_date?: string;
  last_air_date?: string;
  imdb_score?: number;
  is_published?: boolean;
  kind?: string;
  studio?: Studio;
  seo?: Seo;
}

async function getAnime(slug: string): Promise<AnimeDetails | null> {
  try {
    const res = await fetch(`${API_BASE_URL}animes/${slug}`, {
      cache: "no-store",
    });
    if (!res.ok) return null;
    const json = await res.json();
    return json.data;
  } catch {
    return null;
  }
}

async function getAnimeTags(slug: string): Promise<string[]> {
  try {
    const res = await fetch(`${API_BASE_URL}animes/${slug}/tags`, {
      cache: "no-store",
    });
    if (!res.ok) return [];
    const json = await res.json();
    // Assuming the response is { data: ["tag1", "tag2", ...] }
    return json.data || [];
  } catch {
    return [];
  }
}
export default function AnimePage() {
  const params = useParams();
  /*
  const anime = await getAnime(params.slug);
  const tags = await getAnimeTags(params.slug);
  if (!anime) {
    return (
      <div className="text-white text-center mt-20">–ê–Ω—ñ–º–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>
    );
  }
*/
  // –ú–æ–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è —Ç–µ—Å—Ç—É
  const anime = {
    id: "1",
    slug: String(params?.slug || ""),
    name: "–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å —É –ö–æ—É–ª—É–Ω—ñ",
    poster: "/assets/mock-user-logo.png",
    image_name: "/assets/mock-user-logo.png",
    seo: {
      title: "–í–µ—Å–Ω—è–Ω–∞ –¥—Ä–∞–º–∞",
      description: "–î—É–∂–µ –µ–º–æ—Ü—ñ–π–Ω–µ –∞–Ω—ñ–º–µ.",
      image: "/assets/mock-user-logo.png",
    },
    localRating: 7.76,
    imdb_score: 9.12,
    description: "–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å –∞–Ω—ñ–º–µ –¥–ª—è –º–æ–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö.",
    kind: "TV –°–µ—Ä—ñ–∞–ª",
    is_published: true,
    episodes_count: 12,
    duration: 24,
    first_air_date: "2023-04-01",
    last_air_date: "2023-06-17",
    studio: {
      id: "studio1",
      name: "Kyoto Animation",
      slug: "kyoto-animation",
      description: "–í—ñ–¥–æ–º–∞ —Å—Ç—É–¥—ñ—è –∞–Ω—ñ–º–µ.",
    },
  };
  const tags = ["–î—Ä–∞–º–∞", "–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è", "–ï–º–æ—Ü—ñ—ó"];

  // –ú–∞—Å–∏–≤ –æ–ø–∏—Å—ñ–≤ –∑ –¥–∂–µ—Ä–µ–ª–æ–º
  const descriptionBlocks = [
    {
      description: `–£ –¥–∞–ª–µ–∫–æ–º—É –º–∞–π–±—É—Ç–Ω—å–æ–º—É, –≤ –º—ñ—Å—Ç—ñ-–≥–µ—Ç—Ç–æ –ö–æ—É–ª—É–Ω –í–æ–ª-–°—ñ—Ç—ñ, –∂–∏–≤—É—Ç—å –ª—é–¥–∏, —è–∫—ñ –æ–±–æ–∂–Ω—é—é—Ç—å —Å—Ç–∞—Ä–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è. –¶–µ –ø—Ä–∏—Ç—É–ª–æ–∫ –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Å—É–º—É—î –∑–∞ –ì–æ–Ω–∫–æ–Ω–≥–æ–º –º–∏–Ω—É–ª–æ–≥–æ. –û–¥–Ω–∞–∫ —Ä—ñ—î–ª—Ç–æ—Ä–∫–∞ <span class='text-[#4B7FCC] font-semibold'>–ö—É–¥–∂—ñ—Ä–∞–π –†–µ–π–∫–æ</span> –ø—Ä–∞–≥–Ω–µ –Ω–æ–≤–æ–≥–æ —Ç–∞ –∑–∞—Ö–æ–ø–ª—é—é—á–æ–≥–æ –≤ —Ü—å–æ–º—É —Ä–∞–π–æ–Ω—ñ. –ù–∞—Ç–æ–º—ñ—Å—Ç—å —ó—ó —î–¥–∏–Ω–∏–π –∫–æ–ª–µ–≥–∞, <span class='text-[#4B7FCC] font-semibold'>–ö—É–¥–æ –•–∞–¥–∂—ñ–º–µ</span>, –Ω–∞—Å–æ–ª–æ–¥–∂—É—î—Ç—å—Å—è –Ω–æ—Å—Ç–∞–ª—å–≥—ñ—î—é, —è–∫—É –≤–∏–∫–ª–∏–∫–∞—î –º—ñ—Å—Ç–æ, —ñ –≤—ñ–¥—à—Ç–æ–≤—Ö—É—î –≤—Å–µ —Å—É—á–∞—Å–Ω–µ, —â–æ –ø—Ä–æ—Å–æ—á—É—î—Ç—å—Å—è –∑–∞ –π–æ–≥–æ —Å—Ç—ñ–Ω–∏. –ê–ª–µ, –ø–æ–ø—Ä–∏ —Ä—ñ–∑–Ω—ñ –ø–æ–≥–ª—è–¥–∏ —Ç–∞ –ø–æ—Å—Ç—ñ–π–Ω—ñ —Å–≤–∞—Ä–∫–∏ —á–µ—Ä–µ–∑ –Ω–∞–π–±—É–¥–µ–Ω–Ω—ñ—à—ñ —Ä–µ—á—ñ, –≤–æ–Ω–∏ —á–∞—Å—Ç–æ –∑–Ω–∞—Ö–æ–¥—è—Ç—å –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤ –∫–æ–º–ø–∞–Ω—ñ—ó –æ–¥–Ω–µ –æ–¥–Ω–æ–≥–æ.`,
      source: {},
    },
    {
      description: `–û–¥–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–≤–¥–∞–ª–∏–π –∂–∞—Ä—Ç –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ —Ç–æ–≥–æ, —â–æ –•–∞–¥–∂—ñ–º–µ —Ä–æ–±–∏—Ç—å –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∏–π –∫—Ä–æ–∫ —É –±—ñ–∫ –†–µ–π–∫–æ, –ø—ñ—Å–ª—è —á–æ–≥–æ –≤—ñ–Ω —à–≤–∏–¥–∫–æ –≤–∏–±–∞—á–∞—î—Ç—å—Å—è. –°–ø–∞–Ω—Ç–µ–ª–∏—á–µ–Ω–∞ –π–æ–≥–æ –≤—á–∏–Ω–∫–∞–º–∏, –†–µ–π–∫–æ –ø–æ—á–∏–Ω–∞—î —à—É–∫–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è, —Ç—ñ–ª—å–∫–∏ —â–æ–± –≤–∏—è–≤–∏—Ç–∏ –º–∏–Ω—É–ª–µ, –ø—Ä–æ —è–∫–µ –≤–æ–Ω–∞ –Ω–µ –º–∞—î –∂–æ–¥–Ω–∏—Ö —Å–ø–æ–≥–∞–¥—ñ–≤.`,
      source: {},
    },
    {
      description: "",
      source: {
        name: "MyAnimeList",
        url: "https://myanimelist.net/anime/52991/Kowloon_Generic_Romance",
      },
    },
  ];

  // –ú–æ–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –µ–ø—ñ–∑–æ–¥—ñ–≤
  const episodes = [
    {
      id: 1,
      animeTitle: "–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å —É –ö–æ—É–ª—É–Ω—ñ",
      title: "E1 - –ü—Ä–æ–∫–∏–Ω—É—Ç–∏—Å—å —É –ö–æ—É–ª—É–Ω—ñ",
      preview: "/assets/mock-user-logo.png",
      audio: "–û–∑–≤—É—á–∫–∞ –Ω–∞ English",
      subs: "–°—É–±—Ç–∏—Ç—Ä–∏",
    },
    {
      id: 2,
      animeTitle: "–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å —É –ö–æ—É–ª—É–Ω—ñ",
      title: "E2 - –ú—Ä—ñ—ó –Ω–∞ –¥–∞—Ö—É",
      preview: "/assets/mock-user-logo.png",
      audio: "–û–∑–≤—É—á–∫–∞ –Ω–∞ English",
      subs: "–°—É–±—Ç–∏—Ç—Ä–∏",
    },
    {
      id: 3,
      animeTitle: "–ó–≤–∏—á–∞–π–Ω–∏–π –¥–µ–Ω—å —É –ö–æ—É–ª—É–Ω—ñ",
      title: "E3 - –ú–∞–≥–∞–∑–∏–Ω —É –ø—Ä–æ–≤—É–ª–∫—É",
      preview: "/assets/mock-user-logo.png",
      audio: "–û–∑–≤—É—á–∫–∞ –Ω–∞ English",
      subs: "–°—É–±—Ç–∏—Ç—Ä–∏",
    },
  ];

  const [episodeOrder, setEpisodeOrder] = React.useState<"newest" | "oldest">(
    "oldest"
  );
  const filteredEpisodes = [...episodes];
  if (episodeOrder === "newest") filteredEpisodes.reverse();

  // –ú–æ–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–≥—É–∫—ñ–≤
  const reviews = [
    {
      id: 1,
      username: "–ê–ù–ù–ê",
      date: "24.04.2025",
      rating: 4.5,
      text: "–¶–µ –∞–Ω—ñ–º–µ –º–µ–Ω–µ –∑–∞—á–∞—Ä—É–≤–∞–ª–æ –∑ –ø–µ—Ä—à–æ—ó —Å–µ—Ä—ñ—ó! –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ –ö–æ—É–ª—É–Ω—É –ø–µ—Ä–µ–¥–∞–Ω–∞ –ø—Ä–æ—Å—Ç–æ –º–∞–≥—ñ—á–Ω–æ ‚Äì –Ω—ñ–±–∏ —Å–∞–º–∞ —Ç–∞–º –ø–æ–±—É–≤–∞–ª–∞. –ü–µ—Ä—Å–æ–Ω–∞–∂—ñ –¥—É–∂–µ –∂–∏–≤—ñ, –∞ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω—ñ—Å—Ç—å ‚Äî —Ç–∞–∫–∞ –∑–∞—Ç–∏—à–Ω–∞. –û–±–æ–≤'—è–∑–∫–æ–≤–æ —Ä–∞–¥–∂—É!",
      adminReply:
        "–î—è–∫—É—î–º–æ –∑–∞ —Ç–µ–ø–ª—ñ —Å–ª–æ–≤–∞! –ú–∏ –¥—É–∂–µ —Å—Ç–∞—Ä–∞–ª–∏—Å—è –ø–µ—Ä–µ–¥–∞—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π –ö–æ—É–ª—É–Ω–∞ ü•∞",
      avatarUrl: "/assets/mock-user-logo.png",
    },
    {
      id: 2,
      username: "–Ü–ì–û–†",
      date: "20.04.2025",
      rating: 4.5,
      text: "–°–ø–æ—á–∞—Ç–∫—É –∑–¥–∞–≤–∞–ª–æ—Å—è –Ω—É–¥–Ω–∏–º, –∞–ª–µ —á–∏–º –¥–∞–ª—ñ ‚Äî —Ç–∏–º –±—ñ–ª—å—à–µ –∑–∞—Ç—è–≥—É—î. –¶—ñ–∫–∞–≤—ñ –ø–æ–±—É—Ç–æ–≤—ñ –º–æ–º–µ–Ω—Ç–∏, –≥–∞—Ä–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è, –ø—Ä–∏—î–º–Ω–∞ –º—É–∑–∏–∫–∞. –ì–∞—Ä–Ω–∏–π –≤–∏–±—ñ—Ä –¥–ª—è –≤–µ—á—ñ—Ä–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É",
      adminReply:
        "–î—è–∫—É—î–º–æ, —â–æ –¥–∞–ª–∏ –∞–Ω—ñ–º–µ —à–∞–Ω—Å! –†–∞–¥—ñ, —â–æ –≤–æ–Ω–æ –≤–∞–º –ø—Ä–∏–ø–∞–ª–æ –¥–æ –¥—É—à—ñ üòä",
      avatarUrl: "/assets/mock-user-logo.png",
    },
  ];

  // –ú–æ–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
  const comments = [
    {
      id: 1,
      avatarUrl: "/assets/mock-user-logo.png",
      username: "SenpaiOfSarcasm",
      timeAgo: "7 –¥–Ω—ñ–≤ —Ç–æ–º—É",
      text: "–î–∏–≤–∏–≤—Å—è —Ü–µ –∞–Ω—ñ–º–µ, —è–∫ –Ω–æ—Ä–º–∞–ª—å–Ω–∞ –ª—é–¥–∏–Ω–∞. –¢–µ–ø–µ—Ä ‚Äî —Å–ø–ª—é –∑ –ø–æ—Å—Ç–µ—Ä–æ–º –≥–æ–ª–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è —ñ –ø–ª–∞–Ω—É—é –Ω–∞–∑–≤–∞—Ç–∏ –∫–æ—Ç–∞ –Ω–∞ –π–æ–≥–æ —á–µ—Å—Ç—å",
    },
    {
      id: 2,
      avatarUrl: "/assets/mock-user-logo.png",
      username: "OtakuOnCrack",
      timeAgo: "8 –¥–Ω—ñ–≤ —Ç–æ–º—É",
      text: "–Ø –ø—Ä–∏–π—à–ª–∞ —Å—é–¥–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –∞–Ω—ñ–º–µ, –∞ —Ç–µ–ø–µ—Ä —Ö–æ—á—É –∞–±–æ —Å—Ç–∞—Ç–∏ –Ω—ñ–Ω–¥–∑—è, –∞–±–æ –ø—ñ—Ç–∏ –ø–ª–∞–∫–∞—Ç–∏ –≤ –ø–æ–¥—É—à–∫—É. –ë–µ–∑ —Å–µ—Ä–µ–¥–∏–Ω–∏",
    },
    {
      id: 3,
      avatarUrl: "/assets/mock-user-logo.png",
      username: "RamenRage",
      timeAgo: "7 –¥–Ω—ñ–≤ —Ç–æ–º—É",
      text: "–ü–æ–¥–∏–≤–∏–≤—Å—è –ø–µ—Ä—à—É —Å–µ—Ä—ñ—é, —ñ —Ç–µ–ø–µ—Ä –º–æ—Ä–∞–ª—å–Ω–æ –≥–æ—Ç—É—é—Å—å –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç—É, –∫–æ–ª–∏ –≤—Å–µ –ø—ñ–¥–µ –Ω–µ —Ç–∞–∫. –ë–æ –ø—ñ–¥–µ. –ó–∞–≤–∂–¥–∏ –π–¥–µ",
    },
  ];

  return (
    <>
      <Navbar />
      <div className="max-w-7xl mx-auto py-10 px-4 flex flex-col md:flex-row gap-10">
        {/* Left: Poster */}
        <AnimePosterSection
          poster={anime.poster || anime.image_name}
          name={anime.name}
        />

        {/* Center: Main info */}
        <div className="flex-1 flex flex-col gap-4">
          <AnimeMainInfoSection
            anime={anime}
            tags={tags}
            descriptionBlocks={descriptionBlocks}
          />
          <AnimeEpisodesSection
            episodes={episodes}
            episodeOrder={episodeOrder}
            setEpisodeOrder={setEpisodeOrder}
          />
          <AnimeReviewsSection reviews={reviews} animeName={anime.name} />
          <AnimeCommentSection comments={comments} />
        </div>

        {/* Right: Details panel (only visible on large screens) */}
        <div className="hidden lg:flex flex-col items-end gap-6 min-w-[260px]">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-white text-3xl font-bold">
              {anime.localRating}
            </span>
            <Star className="w-6 h-6 text-white" fill="white" />
          </div>
          <AnimeDetailsPanel anime={anime} />
        </div>
      </div>
    </>
  );
}
